library(ISLR)
library(MASS)
library(ISLR)
library(MASS)
daily_data = read.csv('daily data.csv')
View(daily_data)
library(ISLR)
library(MASS)
daily_data = read.csv('daily data1.csv')
#Multiple linear regression
fit1= lm(quality_percentage~dens_curr, data = daily_data)
View(daily_data)
#install.packages('caTools')
library(caTools)
#install.packages('caTools')
library(caTools)
require(ISLR)
#library(boot)
Pingos = read.csv('daily data1.csv')
names(Pingos)
attach(Pingos)
# # split train and test set
# set.seed(88)
# split <- sample.split(Pingos$cultivar_1, SplitRatio = 0.8)
# # get training and test data
# split
pingostrain <- Pingos[1:floor(length(Pingos$temp)*.8), 2:23]
pingostest <- Pingos[floor(length(Pingos$temp)*.8):length(Pingos$temp), 2:23]
#Subset selection for logistic regression
#y=B0
lm_null=lm(quality_percentage~1, data = pingostrain)
View(Pingos)
View(Pingos)
View(Pingos)
#install.packages('caTools')
library(caTools)
require(ISLR)
#library(boot)
Pingos = read.csv('daily data1.csv')
names(Pingos)
attach(Pingos)
# # split train and test set
# set.seed(88)
# split <- sample.split(Pingos$cultivar_1, SplitRatio = 0.8)
# # get training and test data
# split
pingostrain <- Pingos[1:floor(length(Pingos$temp)*.8), 2:23]
pingostest <- Pingos[floor(length(Pingos$temp)*.8):length(Pingos$temp), 2:23]
#Subset selection for logistic regression
#y=B0
lm_null=lm(risk.level~1 -admission.number, data = pingostrain)
summary(lm_null)
lm_full=lm(risk.level~ .-admission.number ,data=pingostrain)
summary(lm_full)
#install.packages('caTools')
library(caTools)
require(ISLR)
#library(boot)
Pingos = read.csv('daily data1.csv')
names(Pingos)
attach(Pingos)
#install.packages('caTools')
library(caTools)
require(ISLR)
#library(boot)
Pingos = read.csv('daily data1.csv')
names(Pingos)
# # split train and test set
# set.seed(88)
# split <- sample.split(Pingos$cultivar_1, SplitRatio = 0.8)
# # get training and test data
# split
pingostrain <- Pingos[1:floor(length(Pingos$temp)*.8), 2:23]
pingostest <- Pingos[floor(length(Pingos$temp)*.8):length(Pingos$temp), 2:23]
#Subset selection for logistic regression
#y=B0
lm_null=lm(risk.level~1 -pingostrain$admission.number, data = pingostrain)
#Subset selection for logistic regression
#y=B0
lm_null=lm(pingostrain$risk.level~1 -pingostrain$admission.number, data = pingostrain)
View(pingostrain)
#install.packages('caTools')
library(caTools)
require(ISLR)
#library(boot)
Pingos = read.csv('daily data1.csv')
names(Pingos)
# # split train and test set
# set.seed(88)
# split <- sample.split(Pingos$cultivar_1, SplitRatio = 0.8)
# # get training and test data
# split
pingostrain <- Pingos[1:floor(length(Pingos$temp)*.8), ]
pingostest <- Pingos[floor(length(Pingos$temp)*.8):length(Pingos$temp), ]
#Subset selection for logistic regression
#y=B0
lm_null=lm(pingostrain$risk.level~1 -pingostrain$admission.number, data = pingostrain)
summary(lm_null)
#Subset selection for logistic regression
#y=B0
lm_null=lm(pingostrain$risk.level~1 -pingostrain$admission.number, data = pingostrain)
summary(lm_null)
summary(lm_null)
lm_full=lm(risk.level~ .-admission.number ,data=pingostrain)
summary(lm_full)
stepwize=step(lm_null,
scope = list(upper=lm_full),
direction="both",
test="Chisq",
data=pingostrain)
#Subset selection for logistic regression
#y=B0
lm_null=lm(pingostrain$risk.level~1 -pingostrain$admission.number, data = pingostrain)
summary(lm_null)
lm_full=lm(pingostrain$risk.level~ .-pingostrain$admission.number ,data=pingostrain)
summary(lm_full)
stepwize=step(lm_null,
scope = list(upper=lm_full),
direction="both",
test="Chisq",
data=pingostrain)
#install.packages('caTools')
library(caTools)
#install.packages('caTools')
library(caTools)
require(ISLR)
#library(boot)
Pingos = read.csv('daily data1.csv')
names(Pingos)
# # split train and test set
# set.seed(88)
# split <- sample.split(Pingos$cultivar_1, SplitRatio = 0.8)
# # get training and test data
# split
pingostrain <- Pingos[1:floor(length(Pingos$temp)*.8), ]
pingostest <- Pingos[floor(length(Pingos$temp)*.8):length(Pingos$temp), ]
#Subset selection for logistic regression
#y=B0
lm_null=lm(pingostrain$risk.level~1, data = pingostrain)
summary(lm_null)
lm_full=lm(pingostrain$risk.level~ . ,data=pingostrain)
summary(lm_full)
stepwize=step(lm_null,
scope = list(upper=lm_full),
direction="both",
test="Chisq",
data=pingostrain)
summary(stepwize)
#install.packages('caTools')
library(caTools)
require(ISLR)
#library(boot)
Pingos = read.csv('daily data1.csv')
names(Pingos)
# # split train and test set
# set.seed(88)
# split <- sample.split(Pingos$cultivar_1, SplitRatio = 0.8)
# # get training and test data
# split
pingostrain <- Pingos[1:floor(length(Pingos$temp)*.8), ]
pingostest <- Pingos[floor(length(Pingos$temp)*.8):length(Pingos$temp), ]
#Subset selection for logistic regression
#y=B0
lm_null=glm(pingostrain$risk.level~1, data = pingostrain)
summary(lm_null)
lm_full=glm(pingostrain$risk.level~ . ,data=pingostrain)
summary(lm_full)
stepwize=step(lm_null,
scope = list(upper=lm_full),
direction="both",
test="Chisq",
data=pingostrain)
summary(stepwize)
lm_selectedSubset = glm(formula = quality_percentage ~ day + turning_speed + dens_reservoir +
shift + month + prod_id + sup_nr_missing + dens_mand + viscosity +
weight_raw + color_id + part_nr_in + dens_curr, data = pingostrain)
#install.packages('caTools')
library(caTools)
require(ISLR)
#library(boot)
Pingos = read.csv('daily data1.csv')
names(Pingos)
# # split train and test set
# set.seed(88)
# split <- sample.split(Pingos$cultivar_1, SplitRatio = 0.8)
# # get training and test data
# split
pingostrain <- Pingos[1:floor(length(Pingos$temp)*.8), ]
pingostest <- Pingos[floor(length(Pingos$temp)*.8):length(Pingos$temp), ]
#Subset selection for logistic regression
#y=B0
lm_null=glm(pingostrain$risk.level~1, data = pingostrain)
summary(lm_null)
lm_full=glm(pingostrain$risk.level~ . ,data=pingostrain)
summary(lm_full)
stepwize=step(lm_null,
scope = list(upper=lm_full),
direction="both",
test="Chisq",
data=pingostrain)
summary(stepwize)
#Subset selection for logistic regression
#y=B0
?glm()
# Loading package
library(dplyr)
# Loading package
library(caTools)
library(ROCR)
# Loading package
library(dplyr)
# Loading package
library(caTools)
library(ROCR)
#library(boot)
Pingos = read.csv('daily data1.csv')
names(Pingos)
# # split train and test set
# set.seed(88)
# split <- sample.split(Pingos$cultivar_1, SplitRatio = 0.8)
# # get training and test data
# split
pingostrain <- Pingos[1:floor(length(Pingos$temp)*.8), ]
pingostest <- Pingos[floor(length(Pingos$temp)*.8):length(Pingos$temp), ]
#Subset selection for logistic regression
#y=B0
?glm()
#Subset selection for logistic regression
#y=B0
?glm()
lm_null=glm(pingostrain$risk.level~1, data = pingostrain)
summary(lm_null)
lm_full=glm(pingostrain$risk.level~ . ,data=pingostrain)
summary(lm_full)
stepwize=step(lm_null,
scope = list(upper=lm_full),
direction="both",
test="Chisq",
data=pingostrain)
summary(stepwize)
lm_null=glm(pingostrain$risk.level~1, data = pingostrain, family = "binomial")
# Loading package
library(dplyr)
# Loading package
library(caTools)
library(ROCR)
#library(boot)
Pingos = read.csv('daily data1.csv')
names(Pingos)
# # split train and test set
# set.seed(88)
# split <- sample.split(Pingos$cultivar_1, SplitRatio = 0.8)
# # get training and test data
# split
pingostrain <- Pingos[1:floor(length(Pingos$temp)*.8), ]
pingostest <- Pingos[floor(length(Pingos$temp)*.8):length(Pingos$temp), ]
#Subset selection for logistic regression
#y=B0
?glm()
lm_null=glm(pingostrain$risk.level~1, data = pingostrain, family = "binomial")
summary(lm_null)
lm_null=glm(pingostrain$risk.level~1, data = pingostrain, family = "binomial")
#library(boot)
Pingos = read.csv('daily data1.csv')
names(Pingos)
# # split train and test set
# set.seed(88)
# split <- sample.split(Pingos$cultivar_1, SplitRatio = 0.8)
# # get training and test data
# split
pingostrain <- Pingos[1:floor(length(Pingos$temp)*.8), ]
pingostest <- Pingos[floor(length(Pingos$temp)*.8):length(Pingos$temp), ]
#Subset selection for logistic regression
#y=B0
?glm()
lm_null=glm(pingostrain$risk.level~1, data = pingostrain, family = "binomial")
summary(lm_null)
lm_full=glm(pingostrain$risk.level~ . ,data=pingostrain, family = "binomial")
summary(lm_full)
stepwize=step(lm_null,
scope = list(upper=lm_full),
direction="both",
test="Chisq",
data=pingostrain)
summary(stepwize)
#library(boot)
Pingos = read.csv('daily data1.csv')
names(Pingos)
# # split train and test set
# set.seed(88)
# split <- sample.split(Pingos$cultivar_1, SplitRatio = 0.8)
# # get training and test data
# split
pingostrain <- Pingos[1:floor(length(Pingos$temp)*.8), ]
pingostest <- Pingos[floor(length(Pingos$temp)*.8):length(Pingos$temp), ]
#Subset selection for logistic regression
#y=B0
?glm()
lm_null=glm(pingostrain$risk.level~1, data = pingostrain, family = "binomial")
summary(lm_null)
lm_full=glm(pingostrain$risk.level~ . ,data=pingostrain, family = "binomial")
summary(lm_full)
stepwize=step(lm_null,
scope = list(upper=lm_full),
direction="both",
test="Chisq",
data=pingostrain)
summary(stepwize)
# Loading package
library(dplyr)
# Loading package
library(caTools)
library(ROCR)
#library(boot)
Pingos = read.csv('daily data1.csv')
names(Pingos)
# # split train and test set
# set.seed(88)
# split <- sample.split(Pingos$cultivar_1, SplitRatio = 0.8)
# # get training and test data
# split
pingostrain <- Pingos[1:floor(length(Pingos$temp)*.8), ]
pingostest <- Pingos[floor(length(Pingos$temp)*.8):length(Pingos$temp), ]
#Subset selection for logistic regression
#y=B0
?glm()
lm_null=glm(pingostrain$risk.level~1, data = pingostrain, family = "binomial")
summary(lm_null)
lm_full=glm(pingostrain$risk.level~ . ,data=pingostrain, family = "binomial")
summary(lm_full)
stepwize=step(lm_null,
scope = list(upper=lm_full),
direction="both",
test="Chisq",
data=pingostrain)
summary(stepwize)
